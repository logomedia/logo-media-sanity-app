"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _ui = require("@sanity/ui");

var _react = require("@xstate/react");

var _react2 = _interopRequireWildcard(require("react"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _constants = require("../../constants");

var _useDeployments2 = _interopRequireDefault(require("../../hooks/useDeployments"));

var _refresh = _interopRequireDefault(require("../../machines/refresh"));

var _Deployment = _interopRequireDefault(require("../Deployment"));

var _DeployButton = _interopRequireDefault(require("../DeployButton"));

var _DeploymentPlaceholder = _interopRequireDefault(require("../DeploymentPlaceholder"));

var _StateDebug = _interopRequireDefault(require("../StateDebug"));

var _TableCell = _interopRequireDefault(require("../TableCell"));

var Deployments = function Deployments(props) {
  var deploymentTarget = props.deploymentTarget; // Refs

  var refTimeout = (0, _react2.useRef)(); // XState

  var _useMachine = (0, _react.useMachine)(_refresh["default"]),
      _useMachine2 = (0, _slicedToArray2["default"])(_useMachine, 2),
      refreshState = _useMachine2[0],
      refreshStateTransition = _useMachine2[1]; // Fetch deployments - disable hook / auto-refetching on error state


  var _useDeployments = (0, _useDeployments2["default"])(deploymentTarget, {
    enabled: !refreshState.matches('error')
  }),
      deployments = _useDeployments.deployments,
      error = _useDeployments.error,
      isFetching = _useDeployments.isFetching,
      isSuccess = _useDeployments.isSuccess,
      refetch = _useDeployments.refetch;

  var toast = (0, _ui.useToast)();
  var isError = refreshState.matches('error');

  var handleDeploySuccess = function handleDeploySuccess() {
    if (refTimeout.current) {
      clearTimeout(refTimeout.current);
    }

    refTimeout.current = setTimeout(function () {
      refetch({
        cancelRefetch: true,
        throwOnError: true
      });
    }, 4000);
  };

  (0, _react2.useEffect)(function () {
    return function () {
      if (refTimeout.current) {
        clearTimeout(refTimeout.current);
      }
    };
  }, []);
  (0, _react2.useEffect)(function () {
    if (error) {
      refreshStateTransition({
        type: 'ERROR'
      });
    }

    if (isFetching) {
      refreshStateTransition({
        type: 'REFRESH'
      });
    }

    if (!isFetching && isSuccess) {
      refreshStateTransition({
        type: 'REFRESHED'
      });
    }
  }, [error, isFetching, isSuccess]);
  (0, _useDeepCompareEffect["default"])(function () {
    if (!refreshState.matches('refreshing')) {
      refreshStateTransition({
        type: 'REFRESH'
      });
    }
  }, [deploymentTarget]);
  (0, _useDeepCompareEffect["default"])(function () {
    if (isError) {
      toast.push({
        closable: true,
        description: "Unable to fetch deployments for ".concat(deploymentTarget.name),
        duration: 8000,
        status: 'error',
        title: _constants.WIDGET_NAME
      });
    }
  }, [deploymentTarget, isError]);
  var hasFetched = typeof deployments !== 'undefined';
  var hasDeployments = deployments && deployments.length > 0;
  return /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    marginTop: 3,
    style: {
      position: 'relative'
    }
  }, /*#__PURE__*/_react2["default"].createElement(_StateDebug["default"], {
    name: "Refresh",
    state: refreshState
  }), !refreshState.matches('error') && /*#__PURE__*/_react2["default"].createElement(_react2["default"].Fragment, null, /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    as: "table",
    style: {
      borderBottom: '1px solid #eee',
      borderCollapse: 'collapse',
      display: 'table',
      tableLayout: 'fixed',
      width: '100%'
    }
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    as: "thead",
    style: {
      display: 'table-header-group'
    }
  }, /*#__PURE__*/_react2["default"].createElement("tr", null, /*#__PURE__*/_react2["default"].createElement(_TableCell["default"], {
    header: true
  }, "Deployment"), /*#__PURE__*/_react2["default"].createElement(_TableCell["default"], {
    header: true,
    variant: "state"
  }, "State"), /*#__PURE__*/_react2["default"].createElement(_TableCell["default"], {
    header: true,
    variant: "branch"
  }, "Branch"), /*#__PURE__*/_react2["default"].createElement(_TableCell["default"], {
    header: true,
    variant: "age"
  }, "Age"), /*#__PURE__*/_react2["default"].createElement(_TableCell["default"], {
    header: true,
    variant: "age"
  }, "Creator"))), /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    as: "tbody",
    style: {
      display: 'table-header-group'
    }
  }, !deployments && new Array(deploymentTarget === null || deploymentTarget === void 0 ? void 0 : deploymentTarget.deployLimit).fill(undefined).map(function (_, index) {
    return /*#__PURE__*/_react2["default"].createElement(_DeploymentPlaceholder["default"], {
      key: index
    });
  }), hasDeployments && (deployments === null || deployments === void 0 ? void 0 : deployments.map(function (deployment) {
    return /*#__PURE__*/_react2["default"].createElement(_Deployment["default"], {
      deployment: deployment,
      key: deployment.uid
    });
  })))), hasFetched && !hasDeployments && /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    padding: 3,
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, {
    muted: true,
    size: 1
  }, "No deployments found. Don't forget to specify a valid team ID if your project belongs to a team."))), refreshState.matches('error') && /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    padding: 3
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, {
    muted: true,
    size: 1
  }, "Unable to fetch recent deployments. Please check your network and deployment settings.")), !refreshState.matches('error') && deploymentTarget.deployHook && /*#__PURE__*/_react2["default"].createElement(_ui.Box, null, /*#__PURE__*/_react2["default"].createElement(_DeployButton["default"], {
    deployHook: deploymentTarget.deployHook,
    onDeploySuccess: handleDeploySuccess,
    targetName: deploymentTarget.name
  })));
};

var _default = Deployments;
exports["default"] = _default;