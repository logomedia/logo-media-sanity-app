"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = require("@xstate/react");

var _react2 = _interopRequireWildcard(require("react"));

var _constants = require("../../constants");

var _deploy = _interopRequireDefault(require("../../machines/deploy"));

var _StateDebug = _interopRequireDefault(require("../StateDebug"));

var DeployButton = function DeployButton(props) {
  var deployHook = props.deployHook,
      onDeploySuccess = props.onDeploySuccess,
      targetName = props.targetName;

  var _useMachine = (0, _react.useMachine)((0, _deploy["default"])(deployHook)),
      _useMachine2 = (0, _slicedToArray2["default"])(_useMachine, 3),
      deployState = _useMachine2[0],
      deployStateTransition = _useMachine2[1],
      deployStateInterpreter = _useMachine2[2];

  var toast = (0, _ui.useToast)();
  var isError = deployState.matches('error');
  var isSuccess = deployState.matches('success'); // Callbacks

  var handleDeploy = function handleDeploy() {
    deployStateTransition({
      type: 'DEPLOY'
    });
  }; // Effects


  (0, _react2.useEffect)(function () {
    if (isError) {
      toast.push({
        closable: true,
        description: "Unable to queue deploy for ".concat(targetName, ": ").concat(deployState.context.error),
        duration: 8000,
        status: 'error',
        title: _constants.WIDGET_NAME
      });
    }

    if (isSuccess) {
      toast.push({
        closable: true,
        description: "Deploy queued for ".concat(targetName),
        duration: 8000,
        status: 'success',
        title: _constants.WIDGET_NAME
      });
    }
  }, [isError, isSuccess]);
  (0, _react2.useEffect)(function () {
    deployStateInterpreter.onTransition(function (state) {
      if (state.value === 'success') {
        if (onDeploySuccess) {
          onDeploySuccess();
        }
      }
    });
  }, [deployStateInterpreter]);
  return /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    padding: 3,
    style: {
      position: 'relative'
    }
  }, /*#__PURE__*/_react2["default"].createElement(_StateDebug["default"], {
    name: "Deploy",
    state: deployState
  }), /*#__PURE__*/_react2["default"].createElement(_ui.Button, {
    disabled: deployState.context.disabled,
    fontSize: 1,
    icon: _icons.UploadIcon,
    mode: "ghost",
    onClick: handleDeploy,
    padding: 3,
    text: "".concat(deployState.context.label, " ").concat(targetName),
    tone: "default"
  }));
};

var _default = DeployButton;
exports["default"] = _default;