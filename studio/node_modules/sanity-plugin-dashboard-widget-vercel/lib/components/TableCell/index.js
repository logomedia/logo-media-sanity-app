"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var TableCell = function TableCell(props) {
  var children = props.children,
      colSpan = props.colSpan,
      header = props.header,
      variant = props.variant;
  var display = 'table-cell';
  var cellWidth = 'auto';

  switch (variant) {
    case 'age':
      cellWidth = '50px';
      break;

    case 'branch':
      cellWidth = '300px';
      display = ['none', 'none', 'none', 'table-cell'];
      break;

    case 'creator':
      cellWidth = '80px';
      break;

    case 'state':
      cellWidth = '110px';
      display = ['none', 'none', 'none', 'none', 'table-cell'];
      break;
  }

  if (header) {
    return /*#__PURE__*/_react["default"].createElement(_ui.Box, {
      as: "th",
      colSpan: colSpan // @ts-expect-error types
      ,
      display: display,
      paddingX: 3,
      paddingY: 2,
      style: {
        maxWidth: cellWidth,
        position: 'relative',
        textAlign: 'left',
        width: cellWidth
      }
    }, /*#__PURE__*/_react["default"].createElement(_ui.Label, {
      size: 0
    }, children));
  } else {
    return /*#__PURE__*/_react["default"].createElement(_ui.Box, {
      as: "td",
      colSpan: colSpan // @ts-expect-error types
      ,
      display: display,
      paddingX: 3,
      paddingY: [2, 2, 3],
      style: {
        borderTop: '1px solid #eee',
        maxWidth: cellWidth,
        position: 'relative',
        textAlign: 'left',
        width: cellWidth
      }
    }, children);
  }
};

var _default = TableCell;
exports["default"] = _default;