"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = require("@xstate/react");

var _groq = _interopRequireDefault(require("groq"));

var _react2 = _interopRequireDefault(require("react"));

var _reactQuery = require("react-query");

var _client = require("./client");

var _StateDebug = _interopRequireDefault(require("./components/StateDebug"));

var _constants = require("./constants");

var _deploymentTargetList = _interopRequireDefault(require("./machines/deploymentTargetList"));

var _DeploymentTargets = _interopRequireDefault(require("./components/DeploymentTargets"));

var _DialogForm = _interopRequireDefault(require("./components/DialogForm"));

var _dialog = _interopRequireDefault(require("./machines/dialog"));

var _templateObject;

var Widget = function Widget() {
  // xstate
  var _useMachine = (0, _react.useMachine)(_deploymentTargetList["default"], {
    services: {
      fetchDataService: function fetchDataService() {
        return _client.client.fetch((0, _groq["default"])(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["*[_type == \"", "\"] | order(name asc)"])), _constants.DEPLOYMENT_TARGET_DOCUMENT_TYPE)).then(function (result) {
          return result;
        });
      }
    }
  }),
      _useMachine2 = (0, _slicedToArray2["default"])(_useMachine, 2),
      deploymentTargetListState = _useMachine2[0],
      deploymentTargetListStateTransition = _useMachine2[1];

  var _useMachine3 = (0, _react.useMachine)(_dialog["default"]),
      _useMachine4 = (0, _slicedToArray2["default"])(_useMachine3, 2),
      dialogState = _useMachine4[0],
      dialogStateTransition = _useMachine4[1];

  var queryClient = new _reactQuery.QueryClient({
    defaultOptions: {
      queries: {
        cacheTime: 0,
        staleTime: 0
      }
    }
  }); // Callbacks

  var handleDialogClose = function handleDialogClose() {
    dialogStateTransition('CLOSE');
  };

  var handleDialogShowCreate = function handleDialogShowCreate() {
    dialogStateTransition('CREATE');
  };

  var handleDialogShowEdit = function handleDialogShowEdit(deploymentTarget) {
    dialogStateTransition('EDIT', {
      deploymentTarget: deploymentTarget
    });
  };

  var handleTargetCreate = function handleTargetCreate(deploymentTarget) {
    deploymentTargetListStateTransition('CREATE', {
      deploymentTarget: deploymentTarget
    });
  };

  var handleTargetDelete = function handleTargetDelete(id) {
    deploymentTargetListStateTransition('DELETE', {
      id: id
    });
  };

  var handleTargetUpdate = function handleTargetUpdate(deploymentTarget) {
    deploymentTargetListStateTransition('UPDATE', {
      deploymentTarget: deploymentTarget
    });
  };

  return /*#__PURE__*/_react2["default"].createElement(_ui.ThemeProvider, {
    scheme: "light",
    theme: _ui.studioTheme
  }, /*#__PURE__*/_react2["default"].createElement(_ui.ToastProvider, {
    zOffset: _constants.Z_INDEX_TOAST_PROVIDER
  }, /*#__PURE__*/_react2["default"].createElement(_reactQuery.QueryClientProvider, {
    client: queryClient
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Card, {
    radius: 2,
    style: {
      overflow: 'hidden '
    }
  }, /*#__PURE__*/_react2["default"].createElement(_StateDebug["default"], {
    name: "List",
    state: deploymentTargetListState
  }), /*#__PURE__*/_react2["default"].createElement(_ui.Flex, {
    align: "center",
    justify: "space-between",
    paddingX: 3,
    paddingY: 2
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, {
    size: 5,
    weight: "semibold"
  }, "Vercel deployments"), /*#__PURE__*/_react2["default"].createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, {
      muted: true,
      size: 1
    }, "Create new deployment target")),
    placement: "left"
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Button, {
    fontSize: 1,
    icon: _icons.AddIcon,
    onClick: handleDialogShowCreate,
    mode: "bleed"
  }))), /*#__PURE__*/_react2["default"].createElement(_ui.Box, null, deploymentTargetListState.matches('pending') && /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    paddingX: 3,
    paddingY: 4
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, null, "Loading...")), deploymentTargetListState.matches('ready.withoutData') && /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    paddingX: 3,
    paddingY: 4
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, null, "No deployment targets found.", ' ', /*#__PURE__*/_react2["default"].createElement("a", {
    onClick: handleDialogShowCreate,
    style: {
      cursor: 'pointer'
    }
  }, "Create a new target?"))), deploymentTargetListState.matches('ready.withData') && /*#__PURE__*/_react2["default"].createElement(_DeploymentTargets["default"], {
    items: deploymentTargetListState.context.results,
    onDialogEdit: handleDialogShowEdit
  }), deploymentTargetListState.matches('failed') && /*#__PURE__*/_react2["default"].createElement(_ui.Box, {
    paddingX: 3,
    paddingY: 4
  }, /*#__PURE__*/_react2["default"].createElement(_ui.Text, null, "Failed to retrieve deployment targets. Please check the developer console log for more information.")))), dialogState.matches('create') && /*#__PURE__*/_react2["default"].createElement(_DialogForm["default"], {
    onClose: handleDialogClose,
    onCreate: handleTargetCreate
  }), dialogState.matches('edit') && /*#__PURE__*/_react2["default"].createElement(_DialogForm["default"], {
    deploymentTarget: dialogState.context.editDeploymentTarget,
    onClose: handleDialogClose,
    onDelete: handleTargetDelete,
    onUpdate: handleTargetUpdate
  }))));
};

var _default = Widget;
exports["default"] = _default;